name: build-OSX

#on:
#  release:
#    types: [created]

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # runs-on: macos-10.15
    runs-on: macos-11

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python "3.12"
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install Conan
      run: |
        python -m pip install --upgrade pip
        pip install wheel conan==1.*

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Install Conan Libraries
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        conan remote add gitlab https://gitlab.com/api/v4/packages/conan -f
        conan user gitlab+deploy-token-653038 -r gitlab -p sBwmejFz5Pn-gZPSNFMy
        conan install .. --build=missing
        conan upload wxwidgets/3.2.8@terranum-conan+wxwidgets/stable --remote=gitlab -q 'build_type=Release' 

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: conan build ..

#    - name: upload file
#      uses: xresloader/upload-to-github-release@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        file: "*.dmg;bin/*.dmg;*.app;"
#        tags: true
#        draft: true
#        verbose: true

